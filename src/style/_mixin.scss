@import 'variables';

@function component-spacing($level) {
  @return round($level * $size-weight);
}

@function component-size($size) {
  @return nth($component-sizes, $size);
}

@mixin fontInfo($lh, $ls) {
  line-height: $lh;
  letter-spacing: $ls;
}

%font {
  font-weight: $normal-weight;

  &-style-12 {
    font-size: $font-size-12;
    @include fontInfo(18px, 0);

    strong {
      font-weight: $bold-weight
    }
  }

  &-style-13 {
    font-size: $font-size-13;
    @include fontInfo(20px, 0);

    strong {
      font-weight: $bold-weight
    }
  }

  &-style-14 {
    font-size: $font-size-14;
    @include fontInfo(21px, 0);

    strong {
      font-weight: $bold-weight
    }
  }

  &-style-16 {
    font-size: $font-size-16;
    @include fontInfo(25px, 0.5px);

    strong {
      font-weight: $bold-weight
    }
  }

  &-style-18 {
    font-size: $font-size-18;
    @include fontInfo(27px, 0.5px);

    strong {
      font-weight: $bold-weight
    }
  }

  &-style-20 {
    font-size: $font-size-20;
    @include fontInfo(30px, 0.5px);

    strong {
      font-weight: $bold-weight
    }
  }

  &-style-24 {
    font-size: $font-size-24;
    @include fontInfo(36px, 0.5px);

    strong {
      font-weight: $bold-weight
    }
  }

  &-style-26 {
    font-size: $font-size-26;
    @include fontInfo(40px, 0.5px);

    strong {
      font-weight: $bold-weight
    }
  }
}

%txt-ellipsis {
  display: inline-block;
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
}

@mixin component-text($level: 3) {
  font-size: nth(nth($-font-size-list, $level), 1);
  line-height: nth(nth($-font-size-list, $level), 2);
}

@mixin square($size) {
  width: $size;
  height: $size;
}

@mixin clear-child-float {
  &:after {
    clear: both;
    display: block;
    content: "";
  }
}

@mixin inline-block($vertical-align: middle) {
  display: inline-block;
  vertical-align: $vertical-align;
}

@mixin border-radius($round) {
  -webkit-border-radius: $round;
  -moz-border-radius: $round;
  border-radius: $round;
}

@mixin box-sizing($sizing) {
  -webkit-box-sizing: $sizing;
  -moz-box-sizing: $sizing;
  box-sizing: $sizing;
}

@mixin fontInfo($lh, $ls) {
  line-height: $lh;
  letter-spacing: $ls;
}

@mixin box-shadow($box-shadow) {
  -webkit-box-shadow: $box-shadow;
  -moz-box-shadow: $box-shadow;
  box-shadow: $box-shadow;
}

@mixin transformY($y) {
  -webkit-transform: translateY($y);
  -ms-transform: translateY($y);
  -moz-transform: translateY($y);
  -o-transform: translateY($y);
  transform: translateY($y);
}

@mixin height-for-line-height($height) {
  height: $height;
  line-height: $height;
}

@mixin appearance-none() {
  appearance: none;
  -webkit-appearance: none;
  -moz-appearance: none;
}

@mixin mobile {
  @media (min-width: #{$breakpoint-mobile}) and (max-width: #{$breakpoint-tablet - 1px}) {
    @content;
  }
}

@mixin tablet {
  @media (min-width: #{$breakpoint-tablet}) and (max-width: #{$breakpoint-desktop - 1px}) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: #{$breakpoint-desktop}) {
    @content;
  }
}
